/**
 * This class is generated by jOOQ
 */
package com.insieme.common.database.tables;

import java.util.Arrays;
import java.util.List;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import com.insieme.common.database.Insieme;
import com.insieme.common.database.Keys;
import com.insieme.common.database.tables.records.TracksRecord;

/**
 * Tracks table generated by JOOQ.
 */
public class Tracks extends TableImpl<TracksRecord> {

	private static final long serialVersionUID = -1530482010;

	/**
	 * The singleton instance of insieme.tracks
	 */
	public static final Tracks TRACKS = new Tracks();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TracksRecord> getRecordType() {
		return TracksRecord.class;
	}

	/**
	 * The table column <code>insieme.tracks.TRACK_ID</code>
	 */
	public final TableField<TracksRecord, String> TRACK_ID = createField("TRACK_ID", SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>insieme.tracks.ARTIST_ID</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT ARTIST_ID
	 * FOREIGN KEY (ARTIST_ID)
	 * REFERENCES insieme.artists (ARTIST_ID)
	 * </pre></code>
	 */
	public final TableField<TracksRecord, String> ARTIST_ID = createField("ARTIST_ID", SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>insieme.tracks.GENRE</code>
	 */
	public final TableField<TracksRecord, String> GENRE = createField("GENRE", SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>insieme.tracks.DOWNLOAD_COUNT</code>
	 */
	public final TableField<TracksRecord, java.lang.Integer> DOWNLOAD_COUNT = createField("DOWNLOAD_COUNT", SQLDataType.INTEGER, this);

	/**
	 * The table column <code>insieme.tracks.DESCRIPTION</code>
	 */
	public final TableField<TracksRecord, String> DESCRIPTION = createField("DESCRIPTION", SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>insieme.tracks.TRACK_NAME</code>
	 */
	public final TableField<TracksRecord, String> TRACK_NAME = createField("TRACK_NAME", SQLDataType.VARCHAR, this);

	public Tracks() {
		super("tracks", Insieme.INSIEME);
	}

	public Tracks(String alias) {
		super(alias,Insieme.INSIEME, Tracks.TRACKS);
	}

	@Override
	@SuppressWarnings("unchecked")
	public List<ForeignKey<TracksRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TracksRecord, ?>>asList(Keys.ARTIST_ID);
	}

	@Override
	public Tracks as(String alias) {
		return new Tracks(alias);
	}
}
